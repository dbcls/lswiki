<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="ja" dir="ltr">
<head>
<title>SPARQList - TogoWiki</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="generator" content="MediaWiki 1.16.3" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/mw/opensearch_desc.php" title="TogoWiki (ja)" />
<link title="Creative Commons" type="application/rdf+xml" href="/mw/index.php?title=SPARQList&amp;action=creativecommons" rel="meta" />
<link rel="copyright" href="http://creativecommons.org/licenses/by/3.0/" />
<link rel="alternate" type="application/atom+xml" title="TogoWikiのAtomフィード" href="/mw/index.php?title=%E7%89%B9%E5%88%A5:%E6%9C%80%E8%BF%91%E3%81%AE%E6%9B%B4%E6%96%B0&amp;feed=atom" />
<link rel="stylesheet" href="/mw/skins/common/shared.css?270" media="screen" />
<link rel="stylesheet" href="/mw/skins/common/commonPrint.css?270" media="print" />
<link rel="stylesheet" href="/mw/skins/monobook/main.css?270" media="screen" />
<!--[if lt IE 5.5000]><link rel="stylesheet" href="/mw/skins/monobook/IE50Fixes.css?270" media="screen" /><![endif]-->
<!--[if IE 5.5000]><link rel="stylesheet" href="/mw/skins/monobook/IE55Fixes.css?270" media="screen" /><![endif]-->
<!--[if IE 6]><link rel="stylesheet" href="/mw/skins/monobook/IE60Fixes.css?270" media="screen" /><![endif]-->
<!--[if IE 7]><link rel="stylesheet" href="/mw/skins/monobook/IE70Fixes.css?270" media="screen" /><![endif]-->
<link rel="stylesheet" href="/mw/index.php?title=MediaWiki:Common.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" />
<link rel="stylesheet" href="/mw/index.php?title=MediaWiki:Print.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" media="print" />
<link rel="stylesheet" href="/mw/index.php?title=MediaWiki:Monobook.css&amp;usemsgcache=yes&amp;ctype=text%2Fcss&amp;smaxage=18000&amp;action=raw&amp;maxage=18000" />
<link rel="stylesheet" href="/mw/index.php?title=-&amp;action=raw&amp;maxage=18000&amp;gen=css" />
<script>
var skin="monobook",
stylepath="/mw/skins",
wgUrlProtocols="http\\:\\/\\/|https\\:\\/\\/|ftp\\:\\/\\/|irc\\:\\/\\/|gopher\\:\\/\\/|telnet\\:\\/\\/|nntp\\:\\/\\/|worldwind\\:\\/\\/|mailto\\:|news\\:|svn\\:\\/\\/",
wgArticlePath="/mw/$1",
wgScriptPath="/mw",
wgScriptExtension=".php",
wgScript="/mw/index.php",
wgVariantArticlePath=false,
wgActionPaths={},
wgServer="http://wiki.lifesciencedb.jp",
wgCanonicalNamespace="",
wgCanonicalSpecialPageName=false,
wgNamespaceNumber=0,
wgPageName="SPARQList",
wgTitle="SPARQList",
wgAction="view",
wgArticleId=802,
wgIsArticle=true,
wgUserName=null,
wgUserGroups=null,
wgUserLanguage="ja",
wgContentLanguage="ja",
wgBreakFrames=false,
wgCurRevisionId=27187,
wgVersion="1.16.3",
wgEnableAPI=true,
wgEnableWriteAPI=true,
wgSeparatorTransformTable=["", ""],
wgDigitTransformTable=["", ""],
wgMainPageTitle="メインページ",
wgFormattedNamespaces={"-2": "メディア", "-1": "特別", "0": "", "1": "ノート", "2": "利用者", "3": "利用者‐会話", "4": "TogoWiki", "5": "TogoWiki‐ノート", "6": "ファイル", "7": "ファイル‐ノート", "8": "MediaWiki", "9": "MediaWiki‐ノート", "10": "Template", "11": "Template‐ノート", "12": "Help", "13": "Help‐ノート", "14": "Category", "15": "Category‐ノート"},
wgNamespaceIds={"メディア": -2, "特別": -1, "": 0, "ノート": 1, "利用者": 2, "利用者‐会話": 3, "togowiki": 4, "togowiki‐ノート": 5, "ファイル": 6, "ファイル‐ノート": 7, "mediawiki": 8, "mediawiki‐ノート": 9, "template": 10, "template‐ノート": 11, "help": 12, "help‐ノート": 13, "category": 14, "category‐ノート": 15, "画像": 6, "画像‐ノート": 7, "image": 6, "image_talk": 7},
wgSiteName="TogoWiki",
wgCategories=[],
wgRestrictionEdit=[],
wgRestrictionMove=[];
</script><script src="/mw/skins/common/wikibits.js?270"></script>
<script src="/mw/skins/common/ajax.js?270"></script>
<script src="/mw/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=monobook&amp;270"></script>

		<style type='text/css'>
		li#pt-openidlogin {
		  background: url(/mw/extensions/OpenID/skin/icons/openid-inputicon.png) top left no-repeat;
		  padding-left: 20px;
		  text-transform: none;
		}
		</style>
</head>
<body class="mediawiki ltr ns-0 ns-subject page-SPARQList skin-monobook">
<div id="globalWrapper">
<div id="column-content"><div id="content" >
	<a id="top"></a>
	
	<h1 id="firstHeading" class="firstHeading">SPARQList</h1>
	<div id="bodyContent">
		<h3 id="siteSub">提供：TogoWiki</h3>
		<div id="contentSub">
				<div id="mw-revision-info">2023年2月21日 (火) 01:00時点における<a href="/mw/%E5%88%A9%E7%94%A8%E8%80%85:Yayamamo" title="利用者:Yayamamo" class="mw-userlink">Yayamamo</a>  <span class="mw-usertoollinks">(<a href="/mw/index.php?title=%E5%88%A9%E7%94%A8%E8%80%85%E2%80%90%E4%BC%9A%E8%A9%B1:Yayamamo&amp;action=edit&amp;redlink=1" class="new" title="利用者‐会話:Yayamamo（存在しないページ）">トーク</a> | <a href="/mw/%E7%89%B9%E5%88%A5:%E6%8A%95%E7%A8%BF%E8%A8%98%E9%8C%B2/Yayamamo" title="特別:投稿記録/Yayamamo">投稿記録</a>)</span>による版</div>

				<div id="mw-revision-nav">(<a href="/mw/index.php?title=SPARQList&amp;diff=prev&amp;oldid=27187" title="SPARQList">差分</a>) <a href="/mw/index.php?title=SPARQList&amp;direction=prev&amp;oldid=27187" title="SPARQList">←前の版</a> | 最新版 (差分) | 次の版→ (差分)</div>
			</div>
		<div id="jump-to-nav">移動： <a href="#column-one">案内</a>, <a href="#searchInput">検索</a></div>
		<!-- start content -->
<p>SPARQList は SPARQL クエリの結果を（必要なら JavaScript で加工して）クライアントに返す REST API を提供するためのミドルウェアです。
</p>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>目次</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#.E4.B8.BB.E3.81.AA.E6.A9.9F.E8.83.BD"><span class="tocnumber">1</span> <span class="toctext">主な機能</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#.E3.83.AC.E3.83.9D.E3.82.B8.E3.83.88.E3.83.AA"><span class="tocnumber">2</span> <span class="toctext">レポジトリ</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#.E3.82.A4.E3.83.B3.E3.82.B9.E3.83.88.E3.83.BC.E3.83.AB"><span class="tocnumber">3</span> <span class="toctext">インストール</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#.E8.B5.B7.E5.8B.95.E6.96.B9.E6.B3.95"><span class="tocnumber">4</span> <span class="toctext">起動方法</span></a>
<ul>
<li class="toclevel-2 tocsection-5"><a href="#.E3.83.87.E3.83.97.E3.83.AD.E3.82.A4.E4.BE.8B"><span class="tocnumber">4.1</span> <span class="toctext">デプロイ例</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="#.E3.81.8A.E3.81.BE.E3.81.91"><span class="tocnumber">4.2</span> <span class="toctext">おまけ</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-7"><a href="#.E4.BD.BF.E3.81.84.E6.96.B9"><span class="tocnumber">5</span> <span class="toctext">使い方</span></a>
<ul>
<li class="toclevel-2 tocsection-8"><a href="#fetch"><span class="tocnumber">5.1</span> <span class="toctext">fetch</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-9"><a href="#Dockerfile"><span class="tocnumber">6</span> <span class="toctext">Dockerfile</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="#Method"><span class="tocnumber">7</span> <span class="toctext">Method</span></a></li>
<li class="toclevel-1 tocsection-11"><a href="#Heap_size_limit"><span class="tocnumber">8</span> <span class="toctext">Heap size limit</span></a></li>
<li class="toclevel-1 tocsection-12"><a href="#.E8.A8.98.E8.BF.B0.E6.94.AF.E6.8F.B4.E3.83.84.E3.83.BC.E3.83.AB"><span class="tocnumber">9</span> <span class="toctext">記述支援ツール</span></a></li>
</ul>
</td></tr></table><script>if (window.showTocToggle) { var tocShowText = "表示"; var tocHideText = "非表示"; showTocToggle(); } </script>
<h2> <span class="mw-headline" id=".E4.B8.BB.E3.81.AA.E6.A9.9F.E8.83.BD"> 主な機能 </span></h2>
<ul><li> Markdown で SPARQL クエリのドキュメントが書ける
</li><li> SPARQL の結果を JavaScript で任意に加工できる
</li><li> 多段の SPARQL や JavaScript の結果を組み合わせて最終的なデータを生成できる
</li><li> ウェブの UI から REST API のロジックを編集したり、オプションを変更できる
</li><li> コンテントネゴシエーションで json の他に text や csv など色々なデータを返すこともできる
</li></ul>
<h2> <span class="mw-headline" id=".E3.83.AC.E3.83.9D.E3.82.B8.E3.83.88.E3.83.AA"> レポジトリ </span></h2>
<ul><li> <a href="https://github.com/dbcls/sparqlist" class="external free" rel="nofollow">https://github.com/dbcls/sparqlist</a>
<ul><li> 2018-02-08 ver. からパラメータがグローバル変数に
</li><li> 2018-02-20 ver. から POST 受信可、JavaScript 内で fetch 利用可
<ul><li> multipart/form-data の POST は不可
</li></ul>
</li></ul>
</li></ul>
<h2> <span class="mw-headline" id=".E3.82.A4.E3.83.B3.E3.82.B9.E3.83.88.E3.83.BC.E3.83.AB"> インストール </span></h2>
<p>node.js の最新版をインストール（展開して bin/node, bin/npm を ~/local/bin などにリンクする）
</p>
<pre>
$ wget --no-check-certificate https://nodejs.org/dist/v7.7.2/node-v7.7.2-linux-x64.tar.xz
$ npm install yarn -g
</pre>
<p>sparql-proxy の現状版をダウンロードしてインストール
</p>
<pre>
$ git clone https://github.com/dbcls/sparqlist.git
$ cd sparqlist
$ ROOT_PATH=/rest/ yarn install
</pre>
<p>ここで ROOT_PATH=/rest/ は <a href="http://localhost:3000/" class="external free" rel="nofollow">http://localhost:3000/</a> の代わりに <a href="http://localhost:3000/rest/" class="external free" rel="nofollow">http://localhost:3000/rest/</a> などのサブパスに SPARQList をデプロイするための設定。
</p>
<h2> <span class="mw-headline" id=".E8.B5.B7.E5.8B.95.E6.96.B9.E6.B3.95"> 起動方法 </span></h2>
<p>$ ROOT_PATH=/rest/ PORT=3000 ADMIN_PASSWORD=xxxxx yarn start
</p><p>これで <a href="http://localhost:3000/rest/" class="external free" rel="nofollow">http://localhost:3000/rest/</a> を開けば OK。
</p>
<h3> <span class="mw-headline" id=".E3.83.87.E3.83.97.E3.83.AD.E3.82.A4.E4.BE.8B"> デプロイ例 </span></h3>
<ul><li> <a href="http://dev.togogenome.org/rest/" class="external free" rel="nofollow">http://dev.togogenome.org/rest/</a>
</li></ul>
<h3> <span class="mw-headline" id=".E3.81.8A.E3.81.BE.E3.81.91"> おまけ </span></h3>
<p>デーモン化する場合
</p>
<pre>
$ npm install forever -g
</pre>
<p>インストール先が /opt/sparqlist/git で yarn が /opt/sparqlist/local/bin にある場合
</p>
<pre>
$ cat startup.sh
#!/bin/sh

export PATH=&quot;/opt/sparqlist/local/bin:$PATH&quot;
(cd /opt/sparqlist/git; ROOT_PATH=/rest/ PORT=xxxxx ADMIN_PASSWORD=xxxxx forever --workingDir=/opt/sparqlist/git /opt/sparqlist/local/bin/yarn start &gt; yarn.log)
</pre>
<h2> <span class="mw-headline" id=".E4.BD.BF.E3.81.84.E6.96.B9"> 使い方 </span></h2>
<p>Markdown で SPARQL クエリや JavaScript を記述する。
</p>
<pre>
# Organism images

## Parameters

* `tax` Taxonomy ID
  * default: 4896
  * examples: 9606, 4896, ...
* `subdomain`
  * default: dev

## Endpoint

http://{{subdomain}}.togogenome.org/sparql-test

## `result` Image URLs

```sparql
PREFIX up: &lt;http://purl.uniprot.org/core/&gt;
PREFIX foaf: &lt;http://xmlns.com/foaf/0.1/&gt;
SELECT&nbsp;?tax&nbsp;?up_uri&nbsp;?id_uri&nbsp;?image
WHERE {
  VALUES&nbsp;?tax { &quot;{{params.tax}}&quot; }   ### SPARQList Ver. 2018-02-07 以降では params 不要の {{tax}}
  VALUES&nbsp;?up_uri { &lt;http://purl.uniprot.org/taxonomy/{{params.tax}}&gt; }
  VALUES&nbsp;?id_uri { &lt;http://identifiers.org/taxonomy/{{params.tax}}&gt; }
 &nbsp;?up_uri foaf:depiction&nbsp;?image
}
```

## Output

```javascript
({
  json({result}) {
    return result.results.bindings;
  },
  text({result}) {
    // return result.results.bindings.map(function(row) {
	// return result.results.bindings.map((row) =&gt; {  // same as above
	// return result.results.bindings.map(row =&gt; {    // same as above
	//   return row.image.value;
	// }).join(&quot;\n&quot;);
    return result.results.bindings.map(row =&gt; row.image.value).join(&quot;\n&quot;);  // same as above
  },
  html: hbs(`
    &lt;ul&gt;
      {{#each result.results.bindings as |row|}}
        &lt;li&gt;{{row.image.value}}&lt;/li&gt;
      {{/each}}
    &lt;/ul&gt;
  `)
})
```
</pre>
<p>このようなファイルを repository ディレクトリ以下に置くことでファイル名を API 名として提供できる。
起動時に指定した ADMIN_PASSWORD で Login すると、ウェブブラウザ上でも API を作成したり編集したりできる。
</p>
<ul><li> ドキュメントは自由に記述可能
</li><li> 最初の # 行が API の名前になる
</li><li> ## Parameters に `hoge` のようにクオートすることで引数の変数名を指定
<ul><li> 変数の説明は自由に記述可能
</li><li> デフォルト値はインデントして default: に続けて記載
</li><li> 他に examples: などを追記することを推奨
</li></ul>
</li><li> ## Endpoint にエンドポイントの URL を記述
</li><li> 続く ## セクションは、`foo` などで結果を受け取る変数名を指定、説明文は自由に記述可能
<ul><li> コードは ```sparql か ```javascript のブロックで記載
</li><li> sparql コード内では handlebars 表記が使用可能
<ul><li> { {hoge }}, { {foo.bar }} で変数の埋め込みの他、{{#if hoge}}, {{#unless fuga}} 条件文や {{#each array}} ループ処理など
</li></ul>
</li></ul>
</li><li> 最後のセクションの戻り値が API の戻り値となる
<ul><li> 最後のセクションが ```sparql の場合、ユーザからの Accept ヘッダがそのまま渡されるため、SELECT 以外の SPARQL に使える
</li><li> 最後のセクションが ```javascript の場合、json() や text() などの関数を並べることで content negotiation する API に拡張できる → この場合 API の拡張子に .json や .text をつけることでも呼び出せるようになる。
<ul><li> html: hbs() で handlbars で HTML 出力サンプルを記述、表示できる (2019-03-18以降のVer.)
</li></ul>
</li></ul>
</li><li> 中間のセクションの JavaScript の書き方
</li></ul>
<pre>
```javascript
({var1, var2}) =&gt; {
  ... code ...
  return json;
};
```

または

```javascript
function({var1, var2}){
  ... code ...
  return json;
}();
```
</pre>
<h3> <span class="mw-headline" id="fetch"> fetch </span></h3>
<ul><li> 2018-02-20 ver.から javascript 内で "fetch" が使えるようになった
</li><li> async, await を使って、SPARQLis や他の API、web ページなどが呼べる
<ul><li> SPARQL の条件分岐やループができる。SPARQList の再帰もできる
</li></ul>
</li><li> method: や body: や header: は API 依存
<ul><li> SPARQList は 'GET' か 'POST, Content-Type: application/x-www-form-urlencoded'
</li><li> multipart/form-data の POST には未対応みたいです
</li></ul>
</li></ul>
<pre>
```javascript
async ({var1, var2})=&gt;{
    const options = {
      method: 'POST',
      body: &quot;key=&quot; + encodeURIComponent(value),
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/x-www-form-urlencoded'
      }
    };

    try{
      var res = await fetch('http://example.org/rest/api/hoge', options).then(res=&gt;res.json());
      return res;
    }catch(error){
      console.log(error);
    }
};
```
</pre>
<ul><li> offset, limit で分轄して投げる SPARQList
<ul><li> virtuoso:ResultSetMaxRows を超えて取れるけど MaxSortedTopRows を超えてはソート出来ないのであまり意味ないかも
</li><li> sparql 部分は別の SPARQList にする
</li><li> loop 数ほぼ同時に endpoint を叩くので攻撃とみなされる可能性もある
</li><li> Array.prototype.push.apply は入れ物になる方が大きくなりすぎるとスタックオーバーフローする場合もある。
</li></ul>
</li></ul>
<pre>
## Parameters

* `limit`
  * default: 100000

## `loop`

```javascript
async ({hoge, limit})=&gt;{
  var options = {
    method: 'POST',
    body: &quot;hoge=&quot; + hoge, //適当に
    headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/x-www-form-urlencoded'
    }
  }
  var url = 'http://example.spaqrlist/rest/api/fuga'; // 行数を返す SPARQlist、多めで良い
  var count = await fetch(url, options).then(res=&gt;res.json()).then(res=&gt;res.results.bindings[0].count.value);
  var loop = Math.ceil(parseInt(count) / parseInt(limit));
  var res = [];
  var url = 'http://example.spaqrlist/rest/api/hoge'; //  limit ずつ行を取ってくる SPARQlist。PARQLは要order
  for(var i = 0; i &lt; loop; i++){
    var offset = parseInt(limit) * i;
    options.body = &quot;limit=&quot; + limit + &quot;&amp;offset=&quot; + offset; // offset と limit を渡す
    res[i] = fetch(url, options).then(res=&gt;res.json());
  }
  var data = Promise.all(res); // SPARQL の結果が全部帰ってきたら
  return data.then(function(res){
    var sum = res[0];
    for(var i = 1; i &lt; loop; i++){   
      Array.prototype.push.apply(sum.results.bindings, res[i].results.bindings); // スタックオーバーフローしないかどうか未確認
    }
    return sum;
  });
};
```

# `return`

```javascript
({
  json({recurse}){ // json
    return recurse;
  },
  text({recurse}){ // tsv
    var vars = recurse.head.vars;
    var list = recurse.results.bindings;
    var text = vars.join(&quot;\t&quot;) + &quot;\n&quot;;
    for(var i = 0; i &lt; list.length; i++){
      var values = [];
      for(var j = 0; j &lt; vars.length; j++){
        var val = &quot;&quot;; 
        if(list[i][vars[j]]) val = list[i][vars[j]].value;
        if(val.match(/^\&quot;.+\&quot;$/)) val = val.match(/^\&quot;(.+)\&quot;$/)[1];
        values.push(val);
      }
      text += values.join(&quot;\t&quot;) + &quot;\n&quot;;
    }
    return text;
  }
})
```
</pre>
<ul><li> ただし、SPARQList 内でオブジェクトが大きくなりすぎるとエラーになるもよう
</li></ul>
<h2> <span class="mw-headline" id="Dockerfile"> Dockerfile </span></h2>
<p><a href="/mw/SPARQLthon55" title="SPARQLthon55">SPARQLthon55</a> で SPARQList の Dockerfile を作りました。
</p>
<ul><li> <a href="https://gist.github.com/ktym/c733743b0c58ccf4ca8b825a1fd06d88" class="external free" rel="nofollow">https://gist.github.com/ktym/c733743b0c58ccf4ca8b825a1fd06d88</a>
</li></ul>
<pre>
% docker build -t sparqlist:v1.0 .
% docker run -d -p 80:3000 sparqlist:v1.0
a1ab8042c9a83b0a0e95a7c0b02c3a13e9ce460ca4aed93d59918f17d2bf533c
</pre>
<p><a href="http://localhost/sparqlist" class="external free" rel="nofollow">http://localhost/sparqlist</a> で見れるはずです。デプロイ例 → <a href="http://ep.dbcls.jp/sparqlist/" class="external free" rel="nofollow">http://ep.dbcls.jp/sparqlist/</a>
</p>
<h2> <span class="mw-headline" id="Method"> Method </span></h2>
<ul><li> POST でも form data を string を渡せるが、json には未対応
</li></ul>
<pre> curl -X POST -d 'key1=value1&amp;key2=value2&amp;key3=value3' <a href="https://sparqlist" class="external free" rel="nofollow">https://sparqlist</a>
</pre>
<h2> <span class="mw-headline" id="Heap_size_limit"> Heap size limit </span></h2>
<ul><li> Node.js が使っている V8 JavaScript エンジンにヒープサイズリミットがあり、大規模に使うとリミットまで使い切って、応答が詰まる場合がある
</li></ul>
<pre>
確認方法 (MB)
node -e 'console.log(v8.getHeapStatistics().heap_size_limit/1024/1024)'

変更例（起動時の例）(MB)
NODE_OPTIONS=&quot;--max-old-space-size=8192&quot; npm start
</pre>
<h2> <span class="mw-headline" id=".E8.A8.98.E8.BF.B0.E6.94.AF.E6.8F.B4.E3.83.84.E3.83.BC.E3.83.AB"> 記述支援ツール </span></h2>
<ul><li> <a href="http://sparql-support.dbcls.jp/sparqlist-support.html" class="external text" rel="nofollow">SPARQList support</a>
<ul><li> SPARQL, JavaScript を一段階ずつ処理しながら、SPARQLet 開発ができます
</li></ul>
</li></ul>

<!-- 
NewPP limit report
Preprocessor node count: 146/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb-togowiki_:pcache:idhash:802-0!1!0!!ja!2!edit=0 and timestamp 20230605011103 -->
<div class="printfooter">
「<a href="http://wiki.lifesciencedb.jp/mw/SPARQList">http://wiki.lifesciencedb.jp/mw/SPARQList</a>」より作成</div>
		<div id='catlinks' class='catlinks catlinks-allhidden'></div>		<!-- end content -->
				<div class="visualClear"></div>
	</div>
</div></div>
<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>表示</h5>
		<div class="pBody">
			<ul>
				 <li id="ca-nstab-main" class="selected"><a href="/mw/SPARQList" title="本文を表示 [c]" accesskey="c">ページ</a></li>
				 <li id="ca-talk" class="new"><a href="/mw/index.php?title=%E3%83%8E%E3%83%BC%E3%83%88:SPARQList&amp;action=edit&amp;redlink=1" title="記事についての議論 [t]" accesskey="t">議論</a></li>
				 <li id="ca-viewsource"><a href="/mw/index.php?title=SPARQList&amp;action=edit" title="このページは保護されています。&#10;ページのソースを閲覧できます。 [e]" accesskey="e">ソースを表示</a></li>
				 <li id="ca-history"><a href="/mw/index.php?title=SPARQList&amp;action=history" title="このページの過去の版 [h]" accesskey="h">履歴</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>個人用ツール</h5>
		<div class="pBody">
			<ul>
				<li id="pt-anonuserpage"><a href="/mw/%E5%88%A9%E7%94%A8%E8%80%85:172.18.8.51" title="自分が編集しているIPアドレスの利用者ページ [.]" accesskey="." class="new">172.18.8.51</a></li>
				<li id="pt-anontalk"><a href="/mw/%E5%88%A9%E7%94%A8%E8%80%85%E2%80%90%E4%BC%9A%E8%A9%B1:172.18.8.51" title="このIPアドレスからなされた編集についての議論 [n]" accesskey="n" class="new">このIPアドレスのトーク</a></li>
				<li id="pt-anonlogin"><a href="/mw/index.php?title=%E7%89%B9%E5%88%A5:%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3&amp;returnto=SPARQList&amp;returntoquery=oldid%3D27187" title="ログインすることが推奨されます。ただし、必須ではありません。 [o]" accesskey="o">ログイン</a></li>
				<li id="pt-openidlogin"><a href="/mw/index.php?title=%E7%89%B9%E5%88%A5:OpenID%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3&amp;returnto=SPARQList">OpenIDでログイン</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(/mw/images/togowiki-logo.png);" href="/mw/%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%9A%E3%83%BC%E3%82%B8" title="メインページに移動"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>案内</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/mw/%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%9A%E3%83%BC%E3%82%B8" title="メインページに移動する [z]" accesskey="z">メインページ</a></li>
				<li id="n-portal"><a href="/mw/TogoWiki:%E3%82%B3%E3%83%9F%E3%83%A5%E3%83%8B%E3%83%86%E3%82%A3%E3%83%BB%E3%83%9D%E3%83%BC%E3%82%BF%E3%83%AB" title="このプロジェクトについて、できること、情報を入手する場所">コミュニティ・ポータル</a></li>
				<li id="n-currentevents"><a href="/mw/TogoWiki:%E6%9C%80%E8%BF%91%E3%81%AE%E5%87%BA%E6%9D%A5%E4%BA%8B" title="最近の出来事について予備知識を得る">最近の出来事</a></li>
				<li id="n-recentchanges"><a href="/mw/%E7%89%B9%E5%88%A5:%E6%9C%80%E8%BF%91%E3%81%AE%E6%9B%B4%E6%96%B0" title="ウィキにおける最近の更新の一覧 [r]" accesskey="r">最近の更新</a></li>
				<li id="n-randompage"><a href="/mw/%E7%89%B9%E5%88%A5:%E3%81%8A%E3%81%BE%E3%81%8B%E3%81%9B%E8%A1%A8%E7%A4%BA" title="無作為に抽出されたページの読み込み [x]" accesskey="x">おまかせ表示</a></li>
				<li id="n-help"><a href="/mw/Help:%E7%9B%AE%E6%AC%A1" title="情報を得る場所">ヘルプ</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">検索</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/mw/index.php" id="searchform">
				<input type='hidden' name="title" value="特別:検索"/>
				<input id="searchInput" title="TogoWiki内を検索" accesskey="f" type="search" name="search" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="表示" title="厳密に一致する名前のページが存在すれば、そのページへ移動します" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="検索" title="入力された文字列が含まれるページを検索します" />
			</form>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>ツールボックス</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/mw/%E7%89%B9%E5%88%A5:%E3%83%AA%E3%83%B3%E3%82%AF%E5%85%83/SPARQList" title="ここにリンクしている全ウィキのページの一覧 [j]" accesskey="j">リンク元</a></li>
				<li id="t-recentchangeslinked"><a href="/mw/%E7%89%B9%E5%88%A5:%E9%96%A2%E9%80%A3%E3%83%9A%E3%83%BC%E3%82%B8%E3%81%AE%E6%9B%B4%E6%96%B0%E7%8A%B6%E6%B3%81/SPARQList" title="このページからリンクしているページの最近の更新 [k]" accesskey="k">関連ページの更新状況</a></li>
<li id="t-specialpages"><a href="/mw/%E7%89%B9%E5%88%A5:%E7%89%B9%E5%88%A5%E3%83%9A%E3%83%BC%E3%82%B8%E4%B8%80%E8%A6%A7" title="特別ページの一覧 [q]" accesskey="q">特別ページ</a></li>
				<li id="t-print"><a href="/mw/index.php?title=SPARQList&amp;oldid=27187&amp;printable=yes" rel="alternate" title="このページの印刷用ページ [p]" accesskey="p">印刷用バージョン</a></li>				<li id="t-permalink"><a href="/mw/index.php?title=SPARQList&amp;oldid=27187" title="ページのこの版への固定リンク">この版への固定リンク</a></li>			</ul>
		</div>
	</div>
</div><!-- end of the left (by default at least) column -->
<div class="visualClear"></div>
<div id="footer">
	<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="/mw/skins/common/images/poweredby_mediawiki_88x31.png" height="31" width="88" alt="Powered by MediaWiki" /></a></div>
	<div id="f-copyrightico"><a href="http://creativecommons.org/licenses/by/3.0/"><img src="http://i.creativecommons.org/l/by/3.0/88x31.png" alt="Attribution 3.0 Unported" width="88" height="31" /></a></div>
	<ul id="f-list">
		<li id="copyright">内容は<a href="http://creativecommons.org/licenses/by/3.0/" class="external ">Attribution 3.0 Unported</a>のライセンスで利用することができます。</li>
		<li id="privacy"><a href="/mw/TogoWiki:%E3%83%97%E3%83%A9%E3%82%A4%E3%83%90%E3%82%B7%E3%83%BC%E3%83%BB%E3%83%9D%E3%83%AA%E3%82%B7%E3%83%BC" title="TogoWiki:プライバシー・ポリシー">プライバシー・ポリシー</a></li>
		<li id="about"><a href="/mw/TogoWiki:TogoWiki%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6" title="TogoWiki:TogoWikiについて">TogoWikiについて</a></li>
		<li id="disclaimer"><a href="/mw/TogoWiki:%E5%85%8D%E8%B2%AC%E4%BA%8B%E9%A0%85" title="TogoWiki:免責事項">免責事項</a></li>
	</ul>
</div>
</div>

<script>if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served in 0.611 secs. --></body></html>
